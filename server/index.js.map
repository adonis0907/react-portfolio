{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","use","exposedHeaders","config","corsHeaders","express","static","bodyParser","urlencoded","extended","db","json","get","req","res","sendFile","path","join","__dirname","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AACA;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CACE,oBAAK;AACHC,kBAAgBC,iBAAOC;AADpB,CAAL,CADF;AAKAP,IAAII,GAAJ,CAAQI,kBAAQC,MAAR,CAAe,cAAf,CAAR;;AAEAT,IAAII,GAAJ,CAAQM,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAZ,IAAII,GAAJ,CAAQ,0BAAW,EAAEE,wBAAF,EAAUO,oBAAV,EAAX,CAAR;AACAb,IAAII,GAAJ,CAAQM,qBAAWI,IAAX,EAAR;;AAEA;AACAd,IAAII,GAAJ,CAAQ,UAAR,EAAoB,uBAAQ,EAAEE,wBAAF,EAAR,CAApB;AACAN,IAAIe,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC9BA,MAAIC,QAAJ,CAAaC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAb;AACD,CAFD;;AAIArB,IAAIC,MAAJ,CAAWqB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBnB,iBAAOoB,IAA7C,EAAmD,YAAM;AACvDC,UAAQC,GAAR,sBAA+B5B,IAAIC,MAAJ,CAAW4B,OAAX,GAAqBH,IAApD;AACD,CAFD;;kBAIe1B,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport session from 'express-session';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport middleware from './middleware';\nimport config from './config.json';\nimport path from 'path';\nimport pokemon from './api/pokemon';\nimport db from './models';\n\nimport scrape from './utils/scrape';\n// scrape();\n\nlet app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(\n  cors({\n    exposedHeaders: config.corsHeaders,\n  }),\n);\napp.use(express.static('client/build'));\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(middleware({ config, db }));\napp.use(bodyParser.json());\n\n// api router\napp.use('/pokemon', pokemon({ config }));\napp.get('*', function(req, res) {\n  res.sendFile(path.join(__dirname, './client/build/index.html'));\n});\n\napp.server.listen(process.env.PORT || config.port, () => {\n  console.log(`Started on port ${app.server.address().port}`);\n});\n\nexport default app;\n"]}