{"version":3,"sources":["../../src/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","use_env_variable","sequelize","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;AACA,IAAIG,WAAWF,KAAKE,QAAL,CAAcC,UAAd,CAAf;AACA,IAAIC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;AACA,IAAIC,SAASR,QAAQS,YAAY,wBAApB,EAA8CJ,GAA9C,CAAb;AACA,IAAIK,KAAK,EAAT;;AAEA,IAAIF,OAAOG,gBAAX,EAA6B;AAC3B,MAAIC,YAAY,IAAIV,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOG,gBAAnB,CAAd,EAAoDH,MAApD,CAAhB;AACD,CAFD,MAEO;AACL,MAAII,YAAY,IAAIV,SAAJ,CACdM,OAAOK,QADO,EAEdL,OAAOM,QAFO,EAGdN,OAAOO,QAHO,EAIdP,MAJc,CAAhB;AAMD;;AAEDT,GAAGiB,WAAH,CAAeP,SAAf,EACGQ,MADH,CACU,gBAAQ;AACd,SACEC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,SAASf,QAApC,IAAgDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADrE;AAGD,CALH,EAMGC,OANH,CAMW,gBAAQ;AACf,MAAIC,QAAQV,UAAU,QAAV,EAAoBX,KAAKsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAZ;AACAR,KAAGY,MAAME,IAAT,IAAiBF,KAAjB;AACD,CATH;;AAWAG,OAAOC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,qBAAa;AACnC,MAAIX,GAAGiB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BlB,OAAGiB,SAAH,EAAcC,SAAd,CAAwBlB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGE,SAAH,GAAeA,SAAf;AACAF,GAAGR,SAAH,GAAeA,SAAf;;AAEA2B,OAAOC,OAAP,GAAiBpB,EAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar Sequelize = require('sequelize');\nvar basename = path.basename(__filename);\nvar env = process.env.NODE_ENV || 'development';\nvar config = require(__dirname + '/../config/config.json')[env];\nvar db = {};\n\nif (config.use_env_variable) {\n  var sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  var sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config,\n  );\n}\n\nfs.readdirSync(__dirname)\n  .filter(file => {\n    return (\n      file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js'\n    );\n  })\n  .forEach(file => {\n    var model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}