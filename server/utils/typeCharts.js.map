{"version":3,"sources":["../../src/utils/typeCharts.js"],"names":["defensiveTypes","abbrev","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","defensiveTypeChart","charts","chart","types","chart2","map","num","i","tempObj","type","multiplier","bixbyChart","resistances","neutral","weaknesses","forEach","o","push","sort","a","b"],"mappings":";;;;;AAAA,IAAMA,iBAAiB,CACrB,QADqB,EAErB,UAFqB,EAGrB,QAHqB,EAIrB,QAJqB,EAKrB,QALqB,EAMrB,MANqB,EAOrB,KAPqB,EAQrB,OARqB,EASrB,OATqB,EAUrB,MAVqB,EAWrB,OAXqB,EAYrB,OAZqB,EAarB,UAbqB,EAcrB,SAdqB,EAerB,KAfqB,EAgBrB,QAhBqB,EAiBrB,MAjBqB,EAkBrB,OAlBqB,CAAvB;;AAqBA;AACA,IAAMC,SAAW,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,EAAyC,IAAzC,EAA8C,IAA9C,EAAmD,IAAnD,EAAwD,IAAxD,EAA6D,IAA7D,EAAkE,IAAlE,EAAuE,IAAvE,EAA4E,IAA5E,EAAiF,IAAjF,EAAsF,IAAtF,CAAjB,C,CAA8G;AAC9G,IAAMC,SAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,WAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAsC,EAAtC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAA+D,EAA/D,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,SAAW,CAAI,CAAJ,EAAQ,EAAR,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAiC,EAAjC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA0D,EAA1D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,SAAW,CAAI,CAAJ,EAAQ,EAAR,EAAc,CAAd,EAAkB,EAAlB,EAAwB,CAAxB,EAA6B,CAA7B,EAAiC,EAAjC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA0D,EAA1D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAwF,EAAxF,CAAjB,C,CAA8G;AAC9G,IAAMC,SAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAkB,EAAlB,EAAwB,CAAxB,EAA4B,EAA5B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,OAAW,CAAG,EAAH,EAAS,CAAT,EAAa,EAAb,EAAkB,EAAlB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAgD,EAAhD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,MAAW,CAAI,CAAJ,EAAQ,EAAR,EAAc,CAAd,EAAmB,CAAnB,EAAuB,EAAvB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA0D,EAA1D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,QAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAkB,EAAlB,EAAwB,CAAxB,EAA6B,CAA7B,EAAiC,EAAjC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,QAAW,CAAG,EAAH,EAAS,CAAT,EAAa,EAAb,EAAmB,CAAnB,EAAwB,CAAxB,EAA4B,EAA5B,EAAiC,EAAjC,EAAuC,CAAvC,EAA2C,EAA3C,EAAiD,CAAjD,EAAsD,CAAtD,EAA0D,EAA1D,EAAgE,CAAhE,EAAoE,EAApE,EAAyE,EAAzE,EAA8E,EAA9E,EAAoF,CAApF,EAAwF,EAAxF,CAAjB,C,CAA8G;AAC9G,IAAMC,OAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAiC,EAAjC,EAAuC,CAAvC,EAA2C,EAA3C,EAAgD,EAAhD,EAAsD,CAAtD,EAA0D,EAA1D,EAAgE,CAAhE,EAAqE,CAArE,EAAyE,EAAzE,EAA+E,CAA/E,EAAoF,CAApF,EAAwF,EAAxF,CAAjB,C,CAA8G;AAC9G,IAAMC,QAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA2C,EAA3C,EAAiD,CAAjD,EAAqD,EAArD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAAyE,EAAzE,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,QAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAuB,EAAvB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAqD,EAArD,EAA0D,EAA1D,EAA+D,EAA/D,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,WAAW,CAAI,CAAJ,EAAS,CAAT,EAAa,EAAb,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA2C,EAA3C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAA+D,EAA/D,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,UAAW,CAAI,CAAJ,EAAQ,EAAR,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAoE,EAApE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,MAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAAyE,EAAzE,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,SAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAuC,CAAvC,EAA4C,CAA5C,EAAgD,EAAhD,EAAqD,EAArD,EAA0D,EAA1D,EAA+D,EAA/D,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAoF,CAApF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,OAAW,CAAI,CAAJ,EAAS,CAAT,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAkC,CAAlC,EAAsC,EAAtC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAmF,EAAnF,EAAyF,CAAzF,CAAjB,C,CAA8G;AAC9G,IAAMC,QAAW,CAAI,CAAJ,EAAQ,EAAR,EAAc,CAAd,EAAmB,CAAnB,EAAwB,CAAxB,EAA6B,CAA7B,EAAiC,EAAjC,EAAuC,CAAvC,EAA4C,CAA5C,EAAiD,CAAjD,EAAsD,CAAtD,EAA2D,CAA3D,EAAgE,CAAhE,EAAqE,CAArE,EAA0E,CAA1E,EAA+E,CAA/E,EAAmF,EAAnF,EAAyF,CAAzF,CAAjB,C,CAA8G;;AAE9G,IAAMC,qBAAqB,SAArBA,kBAAqB,QAAS;AAClC,MAAMC,SAAS;AACbnB,kBADa;AAEbC,sBAFa;AAGbC,kBAHa;AAIbC,kBAJa;AAKbC,kBALa;AAMbC,cANa;AAObC,YAPa;AAQbC,gBARa;AASbC,gBATa;AAUbC,cAVa;AAWbC,gBAXa;AAYbC,gBAZa;AAabC,sBAba;AAcbC,oBAda;AAebC,YAfa;AAgBbC,kBAhBa;AAiBbC,cAjBa;AAkBbC;AAlBa,GAAf;AAoBA,MAAIG,QAAQD,OAAOE,MAAM,CAAN,CAAP,CAAZ;AACA,MAAMC,SAASH,OAAOE,MAAM,CAAN,CAAP,CAAf;AACA,MAAIC,MAAJ,EAAY;AACVF,YAAQA,MAAMG,GAAN,CAAU,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC5B,UAAMC,UAAU,EAAhB;AACAA,cAAQC,IAAR,GAAe7B,eAAe2B,CAAf,CAAf;AACAC,cAAQE,UAAR,GAAqBJ,MAAMF,OAAOG,CAAP,CAA3B;AACA,aAAOC,OAAP;AACD,KALO,CAAR;AAMD,GAPD,MAOO;AACLN,YAAQA,MAAMG,GAAN,CAAU,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC5B,UAAMC,UAAU,EAAhB;AACAA,cAAQC,IAAR,GAAe7B,eAAe2B,CAAf,CAAf;AACAC,cAAQE,UAAR,GAAqBJ,GAArB;AACA,aAAOE,OAAP;AACD,KALO,CAAR;AAMD;;AAED,MAAMG,aAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAa,EAPI;AAQjBC,aAAS,EARQ;AASjBC,gBAAY;AATK,GAAnB;;AAYAZ,QAAMa,OAAN,CAAc,aAAK;AACjB,QAAIC,EAAEN,UAAF,KAAiB,CAAjB,IAAsBM,EAAEN,UAAF,KAAiB,IAAvC,IAA+CM,EAAEN,UAAF,KAAiB,GAApE,EAAyE;AACvEC,iBAAWC,WAAX,CAAuBK,IAAvB,CAA4BD,CAA5B;AACD;AACD,QAAIA,EAAEN,UAAF,KAAiB,CAArB,EAAwB;AACtBC,iBAAWE,OAAX,CAAmBI,IAAnB,CAAwBD,CAAxB;AACD;AACD,QAAIA,EAAEN,UAAF,KAAiB,CAAjB,IAAsBM,EAAEN,UAAF,KAAiB,CAA3C,EAA8C;AAC5CC,iBAAWG,UAAX,CAAsBG,IAAtB,CAA2BD,CAA3B;AACD;AACF,GAVD;;AAYAL,aAAWC,WAAX,CAAuBM,IAAvB,CAA4B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpC,WAAOD,EAAET,UAAF,GAAeU,EAAEV,UAAxB;AACD,GAFD;AAGAC,aAAWG,UAAX,CAAsBI,IAAtB,CAA2B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnC,WAAOD,EAAET,UAAF,GAAeU,EAAEV,UAAxB;AACD,GAFD;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOC,UAAP;AACD,CAtGD;;QAwGSX,kB,GAAAA,kB","file":"typeCharts.js","sourcesContent":["const defensiveTypes = [\n  'normal',\n  'fighting',\n  'flying',\n  'poison',\n  'ground',\n  'rock',\n  'bug',\n  'ghost',\n  'steel',\n  'fire',\n  'water',\n  'grass',\n  'electric',\n  'psychic',\n  'ice',\n  'dragon',\n  'dark',\n  'fairy',\n];\n\n// these rows are defensive rows\nconst abbrev =   ['no','fi','fl','po','gr','ro','bu','gh','st','fi','wa','gr','el','ps','ic','dr','da','fa']; // prettier-ignore\nconst normal =   [   1,   2,   1,   1,   1,   1,   1,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1]; // prettier-ignore\nconst fighting = [   1,   1,   2,   1,   1,   0,   2,  .5,   1,   1,   1,   1,  .5,   1,   2,   1,   1,   1]; // prettier-ignore\nconst flying =   [   1,  .5,   1,   1,   0,   2,  .5,   1,   1,   1,   1,  .5,   2,   1,   2,   1,   1,   1]; // prettier-ignore\nconst poison =   [   1,  .5,   1,  .5,   2,   1,  .5,   1,   1,   1,   1,  .5,   1,   2,   1,   1,   1,  .5]; // prettier-ignore\nconst ground =   [   1,   1,   1,  .5,   1,  .5,   1,   1,   1,   1,   2,   2,   0,   1,   2,   1,   1,   1]; // prettier-ignore\nconst rock =     [  5.,   2,  .5,  .5,   2,   1,   1,   1,   2,  .5,   2,   2,   1,   1,   1,   1,   1,   1]; // prettier-ignore\nconst bug =      [   1,  .5,   2,   1,  .5,   2,   1,   1,   1,   2,   1,  .5,   1,   1,   1,   1,   1,   1]; // prettier-ignore\nconst ghost =    [   0,   0,   1,  .5,   1,   1,  .5,   2,   1,   1,   1,   1,   1,   1,   1,   1,   2,   1]; // prettier-ignore\nconst steel =    [  .5,   2,  .5,   0,   2,  .5,  .5,   1,  .5,   2,   1,  .5,   1,  .5,  .5,  .5,   1,  .5]; // prettier-ignore\nconst fire =     [   1,   1,   1,   1,   2,   2,  .5,   1,  .5,  .5,   2,  .5,   1,   1,  .5,   1,   1,  .5]; // prettier-ignore\nconst water =    [   1,   1,   1,   1,   1,   1,   1,   1,  .5,   1,  .5,   2,   2,   1,  .5,   1,   1,   1]; // prettier-ignore\nconst grass =    [   1,   1,   2,   2,  .5,   1,   2,   1,   1,   2,  .5,  .5,  .5,   1,   2,   1,   1,   1]; // prettier-ignore\nconst electric = [   1,   1,  .5,   1,   2,   1,   1,   1,  .5,   1,   1,   1,  .5,   1,   1,   1,   1,   1]; // prettier-ignore\nconst psychic =  [   1,  .5,   1,   1,   1,   1,   2,   2,   1,   1,   1,   1,   1,  .5,   1,   1,   2,   1]; // prettier-ignore\nconst ice =      [   1,   2,   1,   1,   1,   2,   1,   1,   2,   2,   1,   1,   1,   1,  .5,   1,   1,   1]; // prettier-ignore\nconst dragon =   [   1,   1,   1,   1,   1,   1,   1,   1,   1,  .5,  .5,  .5,  .5,   1,   2,   2,   1,   2]; // prettier-ignore\nconst dark =     [   1,   2,   1,   1,   1,   1,   2,  .5,   1,   1,   1,   1,   1,   0,   1,   1,  .5,   2]; // prettier-ignore\nconst fairy =    [   1,  .5,   1,   2,   1,   1,  .5,   1,   2,   1,   1,   1,   1,   1,   1,   0,  .5,   1]; // prettier-ignore\n\nconst defensiveTypeChart = types => {\n  const charts = {\n    normal,\n    fighting,\n    flying,\n    poison,\n    ground,\n    rock,\n    bug,\n    ghost,\n    steel,\n    fire,\n    water,\n    grass,\n    electric,\n    psychic,\n    ice,\n    dragon,\n    dark,\n    fairy,\n  };\n  let chart = charts[types[0]];\n  const chart2 = charts[types[1]];\n  if (chart2) {\n    chart = chart.map((num, i) => {\n      const tempObj = {};\n      tempObj.type = defensiveTypes[i];\n      tempObj.multiplier = num * chart2[i];\n      return tempObj;\n    });\n  } else {\n    chart = chart.map((num, i) => {\n      const tempObj = {};\n      tempObj.type = defensiveTypes[i];\n      tempObj.multiplier = num;\n      return tempObj;\n    });\n  }\n\n  const bixbyChart = {\n    // noDamage: [],\n    // halfDamage: [],\n    // normalDamage: [],\n    // doubleDamage: [],\n    // quadrupleDamage: [],\n    // raw: chart,\n    resistances: [],\n    neutral: [],\n    weaknesses: [],\n  };\n\n  chart.forEach(o => {\n    if (o.multiplier === 0 || o.multiplier === 0.25 || o.multiplier === 0.5) {\n      bixbyChart.resistances.push(o);\n    }\n    if (o.multiplier === 1) {\n      bixbyChart.neutral.push(o);\n    }\n    if (o.multiplier === 2 || o.multiplier === 4) {\n      bixbyChart.weaknesses.push(o);\n    }\n  });\n\n  bixbyChart.resistances.sort((a, b) => {\n    return a.multiplier - b.multiplier;\n  });\n  bixbyChart.weaknesses.sort((a, b) => {\n    return a.multiplier - b.multiplier;\n  });\n\n  // chart.forEach(o => {\n  //   if (o.multiplier === 0) {\n  //     bixbyChart.noDamage.push(o.type);\n  //   }\n  // });\n  // chart.forEach(o => {\n  //   if (o.multiplier === 0.5) {\n  //     bixbyChart.halfDamage.push(o.type);\n  //   }\n  // });\n  // chart.forEach(o => {\n  //   if (o.multiplier === 1) {\n  //     bixbyChart.normalDamage.push(o.type);\n  //   }\n  // });\n  // chart.forEach(o => {\n  //   if (o.multiplier === 2) {\n  //     bixbyChart.doubleDamage.push(o.type);\n  //   }\n  // });\n  // chart.forEach(o => {\n  //   if (o.multiplier === 4) {\n  //     bixbyChart.quadrupleDamage.push(o.type);\n  //   }\n  // });\n  // bixbyChart.noDamage = chart.find(o => o.multiplier === 0).type;\n  // bixbyChart.halfDamage = chart.find(o => o.multiplier === 0.5).type;\n  // bixbyChart.normalDamage = chart.find(o => o.multiplier === 1).type;\n  // bixbyChart.doubleDamage = chart.find(o => o.multiplier === 2).type;\n  // bixbyChart.quadrupleDamage = chart.find(o => o.multiplier === 4).type;\n\n  return bixbyChart;\n};\n\nexport { defensiveTypeChart };\n"]}